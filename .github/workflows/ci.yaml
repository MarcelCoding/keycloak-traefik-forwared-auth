name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

env:
  JAVA_VERSION: 11
  JAVA_DISTRO: adopt
  IMAGE_NAME: an2ic3/keycloak

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Lint with Gradle
        run: ./gradlew checkstyleMain checkstyleTest spotbugsMain spotbugsTest pmdMain pmdTest --stacktrace --no-daemon

#      - name: Annotate Checkstyle Issues
#        uses: jwgmeligmeyling/checkstyle-github-action@master
#        with:
#          path: '**/build/reports/checkstyle/*.xml'

#      - name: Annotate SpotBugs Issues
#        uses: jwgmeligmeyling/spotbugs-github-action@master
#        with:
#          path: '**/build/reports/spotbugs/*.xml'

#      - name: Annotate PMD Issues
#        uses: jwgmeligmeyling/pmd-github-action@master
#        with:
#          path: '**/build/reports/pmd/*.xml'

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11, 16 ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with Gradle
        run: ./gradlew test --stacktrace --no-daemon

  build:
    needs: [ lint, test ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew jar --stacktrace --no-daemon && mkdir -p dist && find ./ -iwholename '.*/build/libs/*.jar' -exec mv '{}' ./dist \;

      - uses: actions/upload-artifact@v2
        with:
          name: keycloak-extensions
          path: 'dist/*.jar'

  docker:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: marcelcoding/ghaction-docker-meta@v2
        with:
          tag-edge: true
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            {{major}}

      - uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - uses: actions/download-artifact@v2
        with:
          name: keycloak-extensions
          path: dist

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Check manifest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.docker_meta.outputs.version }}
